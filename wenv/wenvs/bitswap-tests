#!/bin/zsh

wenv_def() {
    WENV_DIR="/home/grish/src/bitswap-tests"
    WENV_DEPS=('iptb')
    WENV_PROJECT='bitswap-tests'
    WENV_BRANCH='master'
    startup_wenv() {
        sudo systemctl start docker
        wenv_tmux_split h "$EDITOR ${wenv_files[legacy]}"
        tmux select-pane -L
        $EDITOR src/bitswap_tests/app.py
    }
    shutdown_wenv() {
        iptb stop
        clean
        sudo systemctl stop docker
    }
    bootstrap_wenv() {
        git clone https://github.com/dgrisham/bitswap-tests "$WENV_DIR"
    }
}

export IPTB_ROOT="$HOME/.iptb"

init() {
    num="$1"
    [[ -z "$num" ]] && num=3
    yes | iptb init -n $num --type docker
}

reinit() {
    iptb kill
    init "$1"
}

declare -Ag wenv_dirs=(
        ['legacy']="deprecated"
        ['iptb']="$GOPATH/src/github.com/ipfs/iptb"
        ['cnet']="$GOPATH/src/github.com/whyrusleeping/go-ctrlnet"
        ['ipfs']="$GOPATH/src/github.com/ipfs/go-ipfs"
        ['bitswap']="$GOPATH/src/github.com/ipfs/go-bitswap"
        ['bs']='${wenv_dirs[bitswap]}'
)
declare -Ag wenv_files=(
    ['legacy']="${wenv_dirs[legacy]}/test.sh"
)

c() {
    local flag_r=0
    local wname=""
    while getopts ":rn:" opt; do
        case $opt in
            r)
                flag_r=1
                ;;
            n)
                wname="$OPTARG"
                ;;
            \?)
                echo "unknown option: -$OPTARG" >&2
                ;;
        esac
    done
    shift $((OPTIND-1))

    local input="$1"
    shift

    [ "${wenv_dirs[$input]+0}" ] || { echo "no entry '$input'" >&2 ; return 1 }
    dir="${wenv_dirs[$input]}"
    (( flag_r == 1 )) && wname="$input"

    local abs
    if [[ $dir != /* ]]; then
        abs=$(realpath --relative-to=. "$WENV_DIR/$dir")
    else
        abs=$dir
    fi
    cd "$abs"

    [[ ! -z "$wname" ]] && tmux rename-window "$wname"
}
_c() {
    COMPREPLY=()
    complete +o default

    local word="${COMP_WORDS[COMP_CWORD]}"
    local prev="${COMP_WORDS[COMP_CWORD-1]}"

    if (( COMP_CWORD == 1 )) && [[ ${word} == -* ]]; then
        COMPREPLY=( $(compgen -W "-r" -- ${word}) )
    elif (( COMP_CWORD == 1 )) || { ((COMP_CWORD == 2 )) && [[ ${prev} == -* ]]; }; then
        local opts="${(k)wenv_dirs[@]}"
        COMPREPLY=( $(compgen -W "${opts}" -- ${word}) )
    fi
}
complete -F _c c

edit() {
    local flag_r=0
    local wname=""
    local opts=""
    while getopts ":rn:o:" opt; do
        case $opt in
            r)
                flag_r=1
                ;;
            n)
                wname="$OPTARG"
                ;;
            o)
                opts="$OPTARG"
                ;;
            \?)
                echo "unknown option: -$OPTARG" >&2
                ;;
        esac
    done
    shift $((OPTIND-1))

    local files=()
    for arg in $@; do
        [ "${wenv_files[$arg]+0}" ] || { echo "no entry '$arg'" >&2 ; return 1 }
        files+="${wenv_files[$arg]}"
    done
    (( flag_r == 1 )) && wname="$1"

    local abs=()
    for file in $files; do
        if [[ $file != /* ]]; then
            abs+=($(realpath --relative-to=. "$WENV_DIR/$file"))
        else
            abs+=($file)
        fi
    done

    [[ ! -z "$wname" ]] && tmux rename-window "$wname"
    eval "$EDITOR $opts $abs"
}
_edit() {
    COMPREPLY=()
    complete +o default

    local word="${COMP_WORDS[COMP_CWORD]}"
    local prev="${COMP_WORDS[COMP_CWORD-1]}"

    if [[ ${word} == -* ]]; then
        COMPREPLY=($(compgen -W "-r -n -o" -- ${word}))
    else
        local opts="${(k)wenv_files[@]}"
        COMPREPLY=($(compgen -W "${opts}" -- ${word}))
    fi
}
complete -F _edit edit
