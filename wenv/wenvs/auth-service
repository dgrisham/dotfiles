#!/usr/bin/env zsh

wenv_def() {
    WENV_DIR="/home/grish/.go/src/gitlab.com/health-in-motion/auth_service"
    WENV_DEPS=()
    WENV_PROJECT=''
    WENV_TASK=''
    WENV_EXTENSIONS=('c' 'edit')

    startup_wenv() {
        sudo systemctl start postgresql
        tmux rename-window src
        wenv_tmux_split -n db window 'c db; clear'
        wenv_tmux_split -n run window
        tmux select-window -t src
    }
    shutdown_wenv() {
        sudo systemctl stop postgresql
    }
    bootstrap_wenv() {}
}

declare -Ag wenv_dirs=(
    ['db']="$HOME/src/auth-service-db"
)
declare -Ag wenv_files=(
    ['db']="${wenv_dirs[db]}/users.sql"
    ['notes']="$HOME/src/inspire/ecommerce/notes.md"
    ['go']='$(find . -name \*.go)'
)
declare -Ag wenv_vars=(
    ['db']='users'
)

db() {
    [[ -z "$1" ]] && { echo "error: input subcommand" ; return 1 }
    local cmd="$1"
    local db="${wenv_vars[db]}"
    shift
    case "$cmd" in
        open)
            psql -U postgres -d "$db"
            ;;
        cmd)
            psql -U postgres -a -f <(echo "$@")
            ;;
        query)
            psql -U postgres -d "$db" -a -f <(echo "$@")
            ;;
        run)
            [[ -z "$1" ]] && { echo "error: requires filename input"; return 1 }
            fname="$1"
            psql -U postgres -d "$db" -f "$fname"
            ;;
        reset)
            db cmd "DROP DATABASE IF EXISTS $db"
            db cmd "CREATE DATABASE $db"
            db run "${wenv_files[db]}"
            ;;
    esac
}
_db() {
    COMPREPLY=()
    complete +o default

    local word="${COMP_WORDS[COMP_CWORD]}"
    local prev="${COMP_WORDS[COMP_CWORD-1]}"

    if (( COMP_CWORD == 1 )) && [[ ${word} == -* ]]; then
        COMPREPLY=( $(compgen -W "-r" -- ${word}) )
    elif (( COMP_CWORD == 1 )) || { ((COMP_CWORD == 2 )) && [[ ${prev} == -* ]]; }; then
        local opts="open cmd query run reset"
        COMPREPLY=( $(compgen -W "${opts}" -- ${word}) )
    fi
}
complete -F _db db
