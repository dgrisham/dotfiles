# General
# -------
## change default prefix
set-option -g prefix C-a
# previous window
bind-key a last-window
# previous session
bind-key A switch-client -l

# Navigation
# ----------
## movement bewteen windows
unbind-key <
unbind-key >
bind-key -r < previous-window
bind-key -r > next-window
## movement between panes
unbind-key j
unbind-key k
unbind-key h
unbind-key l
bind-key j select-pane -D
bind-key k select-pane -U
bind-key h select-pane -L
bind-key l select-pane -R
## set window split
bind-key - split-window
bind-key \\ split-window -h
## set window creation
bind-key c new-window
## resizing panes
unbind-key J
unbind-key K
unbind-key H
unbind-key L
bind-key -r J resize-pane -D 4
bind-key -r K resize-pane -U 4
bind-key -r H resize-pane -L 4
bind-key -r L resize-pane -R 4
bind-key -r M-J resize-pane -D 1
bind-key -r M-K resize-pane -U 1
bind-key -r M-H resize-pane -L 1
bind-key -r M-L resize-pane -R 1
## kill current pane
unbind-key x
bind-key x kill-pane
## move panes
unbind-key m
bind-key m command-prompt -p "send to: " "join-pane -t '%%'"

# if run as "tmux attach", create a session if one does not already exist
new-session -n $HOST

# Colors
# ------

# default window title colors
set-window-option -g window-status-style "fg=colour255"
set-window-option -ag window-status-style "bg=colour0"

# active window title colors
set-window-option -g window-status-current-style "fg=colour0" #changeme
set-window-option -ag window-status-current-style "bg=colour255"

# status bar color
set-option -g status-bg colour0
set-option -g status-fg colour252

# pane border
set-option -g pane-border-style "fg=colour236"
set-option -g pane-active-border-style "fg=colour255"

# message text
set-option -g message-style "bg=colour0"
set-option -ag message-style "fg=colour255"

# pane number display
set-option -g display-panes-active-colour colour33
set-option -g display-panes-colour colour166

# clock
set-window-option -g clock-mode-colour green

# mode-style (search/select)
set-window-option -g mode-style "bg=colour255"
set-window-option -ag mode-style "fg=colour0"

# Run Commands
# ------------

### music controls
unbind-key Space
unbind-key Up
unbind-key Down
unbind-key Left
unbind-key Right
bind-key Space    run-shell 'mpc toggle    >/dev/null'
bind-key -r Left  run-shell 'mpc prev      >/dev/null'
bind-key -r Right run-shell 'mpc next      >/dev/null'
bind-key -r Up    run-shell 'mpc volume +2 >/dev/null'
bind-key -r Down  run-shell 'mpc volume -2 >/dev/null'

# x window title
set-option -g set-titles on
set-option -g set-titles-string '#H:#S #W #T'

## Status bar settings

### Status bar general
set-option -g status on                # turn the status bar on
set -g status-right "#(tmux_status)"
set -g status-interval 5               # set update frequencey (default 15 seconds)
set-option -g status-position top # position the status bar at top of screen

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity off

# paste contents of x11 clipboard
bind-key P pipe-pane -I 'xclip -o'
# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v   send-keys -X begin-selection
bind-key -T copy-mode-vi M-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y   send-keys -X copy-selection

bind-key C command-prompt -p "name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "config reloaded..."

# auto window rename
set-window-option -g automatic-rename on

set -g status-left-length 26

# color
# set -ga terminal-overrides ',xterm-256color:Tc'
set -g default-terminal "screen-256color"
# set -g default-terminal "linux"

run-shell ~/src/tmux-urlview/urlview.tmux

# custom emote selector -- three tmux commands are happening here, maybe this could be simplified
bind-key e split-window -l 10 'tmux send-keys -t {up-of} $(cat $XDG_CONFIG_HOME/tmux/emotes | sk | awk "{print \$1}")'

bind t command-prompt -p "(rename-pane)" -I "#T" "select-pane -T '%%'"

set-hook -g after-split-window 'selectp -T ""'
set-hook -g after-new-window   'selectp -T ""'
set-hook -g after-new-session  'selectp -T ""'
set-hook -g session-created    'selectp -T ""'

# set-hook -g window-layout-changed 'set-window -F pane-border-status "#{?pane_title,top,off}" ; if-shell -F "#{==:#{window_panes},1}" "set-option -w pane-border-status off"'
# set-hook -g after-select-window   'set-window -F pane-border-status "#{?pane_title,top,off}"'
# set-hook -g after-select-pane     'set-window -F pane-border-status "#{?pane_title,top,off}"'

set-hook -g window-layout-changed 'set-window -F pane-border-status "#{?pane_title,top,off}"'
set-hook -g after-select-window   'set-window -F pane-border-status "#{?pane_title,top,off}"'
set-hook -g after-select-pane     'set-window -F pane-border-status "#{?pane_title,top,off}"'
